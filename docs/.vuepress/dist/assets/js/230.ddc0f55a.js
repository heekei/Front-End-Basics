(window.webpackJsonp=window.webpackJsonp||[]).push([[230],{694:function(t,s,a){"use strict";a.r(s);var n=a(25),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"http-缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-缓存"}},[t._v("#")]),t._v(" HTTP 缓存")]),t._v(" "),s("p",[t._v("作为网站性能优化的方式之一，浏览器请求过某些文件后，可以将一些不怎么变化的静态文件缓存起来，这样做可以节省 HTTP 请求，既能降低服务器的带宽消耗，也能够提高用户的访问速度。")]),t._v(" "),s("h2",{attrs:{id:"强缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[t._v("#")]),t._v(" 强缓存")]),t._v(" "),s("p",[t._v("强缓存是指浏览器在请求资源时，直接从本地缓存中获取资源，而无需向服务器发送请求。")]),t._v(" "),s("h3",{attrs:{id:"expires"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#expires"}},[t._v("#")]),t._v(" Expires")]),t._v(" "),s("p",[t._v("服务器通过设置 Expires 响应头来指定资源的过期时间，浏览器会根据这个过期时间来判断是直接从本地缓存中加载资源，还是重新向服务器请求资源。")]),t._v(" "),s("p",[t._v("它是 HTTP/1.0 版本的响应头字段，已逐渐被弃用。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" expirationTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3600000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前时间加上1小时的毫秒数")]),t._v("\nres"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Expires'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" expirationTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUTCString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"存在的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存在的问题"}},[t._v("#")]),t._v(" 存在的问题")]),t._v(" "),s("p",[t._v("Expires 使用的是服务器时间，如果服务器时间和客户端时间不一致，可能会导致缓存失效。")]),t._v(" "),s("h3",{attrs:{id:"cache-control"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[t._v("#")]),t._v(" Cache-Control")]),t._v(" "),s("p",[t._v("Cache-Control 是 HTTP/1.1 引入的响应头字段，用于控制缓存策略，提供了丰富的缓存控制选项，常用的指令有：max-age、no-store、no-cache 等，max-age 对应一个以秒为单位的时间值，表示资源在本地缓存中有效的时间，它比 Expires 更精确，更强大。")]),t._v(" "),s("h4",{attrs:{id:"cache-control-指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cache-control-指令"}},[t._v("#")]),t._v(" Cache-Control 指令")]),t._v(" "),s("ul",[s("li",[t._v("max-age： 指定资源在缓存中的最大有效期，以秒为单位。例如：Cache-Control: max-age=3600 表示资源在缓存中有效期为 3600 秒（1 小时）。")]),t._v(" "),s("li",[t._v("s-maxage="),s("seconds",[t._v(" ：仅适用于共享缓存（如 CDN），优先级高于 max-age。")])],1),t._v(" "),s("li",[t._v("public： 表示响应可以被任意缓存（包括客户端和代理服务器）缓存。例如：Cache-Control: public。")]),t._v(" "),s("li",[t._v("private： 默认值，表示响应只能被客户端缓存，不允许被代理服务器缓存。例如：Cache-Control: private。")]),t._v(" "),s("li",[t._v("immutable ：指示资源不会随时间改变，可以永远缓存。")]),t._v(" "),s("li",[t._v("no-cache： 强制缓存重新验证，即使缓存中有副本，也要向服务器检查缓存的有效性。。例如：Cache-Control: no-cache。")]),t._v(" "),s("li",[t._v("no-store： 表示禁止缓存存储任何关于请求和响应的内容。每次都需要向服务器发送请求获取最新的资源。例如：Cache-Control: no-store。")]),t._v(" "),s("li",[t._v("must-revalidate： 指示缓存必须在过期之后重新验证资源的有效性。如果验证失败，则必须向服务器重新获取资源。例如：Cache-Control: must-revalidate。")]),t._v(" "),s("li",[t._v("proxy-revalidate ：与 must-revalidate 类似，但仅适用于共享缓存。")]),t._v(" "),s("li",[t._v("no-transform： 告知中间缓存服务器不要修改响应的内容，保持原样传递给客户端。例如：Cache-Control: no-transform。")])]),t._v(" "),s("p",[t._v("有缓存效果的指令：public，private，max-age，s-maxage，immutable。\n没有缓存效果或限制缓存的指令：no-cache，no-store，must-revalidate，proxy-revalidate，no-transform。")]),t._v(" "),s("p",[t._v("Cache-Control 的值是可以组合使用的。通过组合不同的指令，可以更精确地控制缓存行为。以下是一些常见的组合用法和示例：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置资源的 Cache-Control 指令为 public，有效期为1小时")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("express"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("static")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'public'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("maxAge")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3600")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/example'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回示例文本，并设置 Cache-Control 指令为 no-cache")]),t._v("\n  res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Cache-Control'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'no-cache'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello, World!'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("在上述代码中，我们通过 Express 的静态文件中间件设置了静态资源的 Cache-Control 指令为 max-age=3600, public，表示资源在缓存中的有效期为 1 小时，并且允许被公共缓存（包括客户端和代理服务器）缓存。而对于 /example 路径的请求，我们设置了 Cache-Control: no-cache，告诉浏览器不要直接使用缓存，需要向服务器发送请求进行验证。")]),t._v(" "),s("h3",{attrs:{id:"强缓存触发条件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强缓存触发条件"}},[t._v("#")]),t._v(" 强缓存触发条件")]),t._v(" "),s("p",[t._v("浏览器请求资源得到强缓存响应头时，浏览器会将该资源缓存到本地，当浏览器下一次访问该资源时，同时满足以下 3 个条件，浏览器会直接使用本地资源，不发起 HTTP 请求。")]),t._v(" "),s("ol",[s("li",[t._v("两次请求的 URL 完全相同（包括 host、pathname、query）")]),t._v(" "),s("li",[t._v("请求的动作是 GET")]),t._v(" "),s("li",[t._v("请求头不带有 Cache-Control 是 no-cache、no-store、max-age=0 ，pragma 是 no-cache 这两个信息。")])]),t._v(" "),s("blockquote",[s("p",[t._v("在 HTTP/1.0 中，Pragma: no-cache 的作用是确保每次请求都会向服务器请求最新的数据，即使有缓存也会被忽略。尽管 Pragma: no-cache 在过去被广泛使用，但随着 HTTP/1.1 的普及和引入了更为强大的缓存控制机制 Cache-Control，Pragma: no-cache 已经逐渐被弃用。")])]),t._v(" "),s("h3",{attrs:{id:"强缓存失效场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强缓存失效场景"}},[t._v("#")]),t._v(" 强缓存失效场景")]),t._v(" "),s("ol",[s("li",[t._v("用户清空缓存")]),t._v(" "),s("li",[t._v("强制刷新：进行强制刷新操作会忽略缓存，并向服务器重新请求资源。")]),t._v(" "),s("li",[t._v("通过地址栏访问")])]),t._v(" "),s("p",[t._v("根据浏览器的标准，通过地址栏访问、以及强制刷新网页的时候，HTTP 请求头自动会带上 Cache-Control: no-cache 和 Pragma: no-cache 的信息。只要有这两个请求头之一，浏览器就会忽略响应头中的 Cache-Control 字段。")]),t._v(" "),s("h3",{attrs:{id:"强缓存引发的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强缓存引发的问题"}},[t._v("#")]),t._v(" 强缓存引发的问题")]),t._v(" "),s("p",[t._v("通常，在开发 Web 应用时，服务器都会带有强缓存策略。一般的网站，静态资源的内容还会被放到 CDN（内容分发网络）中，以提升访问速度。CDN 网关会给资源文件添加很长时间的强缓存策略甚至是永久的缓存。所以我们"),s("strong",[t._v("更新 Web 应用时，如果有部分静态资源文件，比如图片、JS、CSS 的内容改变，但是文件名没有改变，应用更新后，会发现 html 内容更新了，而页面中的图片、脚本还是旧的，但是用浏览器地址栏访问这些文件，看到的又是新的")]),t._v("。产生这种“奇怪”的现象，就是"),s("strong",[t._v("因为我们浏览器的强缓存策略，在不是通过地址栏访问资源的情况下，需要强制刷新才能更新资源")]),t._v("。")]),t._v(" "),s("p",[t._v("我们无法强迫用户去强制刷新浏览器，所以一般来说，Web 应用更新时应该主动变更修改过的资源文件的 URL。要改变 URL，我们可以修改文件名，或者在 URL 上增加随着发布版本改变的 query 字段，以避免强缓存被触发。这个步骤在现在的 Web 开发中，一般交给工程化脚本去完成。")]),t._v(" "),s("h2",{attrs:{id:"协商缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),s("p",[t._v("协商缓存是以 HTTP 内容协商的方式来实现缓存，具体是指浏览器在本地缓存失效后，向服务器发送请求，服务器通过比较资源的最后修改时间（Last-Modified）和实体标签（ETag）来决定是否需要返回最新的资源或告知浏览器直接使用缓存的资源。")]),t._v(" "),s("p",[t._v("强缓存的使用条件比较严格，对浏览器地址栏访问的资源无效。协商缓存弥补了这个问题，可以缓存地址栏访问的文件")]),t._v(" "),s("h3",{attrs:{id:"last-modified"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#last-modified"}},[t._v("#")]),t._v(" Last-Modified")]),t._v(" "),s("ol",[s("li",[t._v("浏览器发起 HTTP 请求，服务器可以返回 Last-Modified 响应头，这个响应头的值是一个时间戳。")]),t._v(" "),s("li",[t._v("如果服务器这么做了，那么浏览器会缓存这个资源")]),t._v(" "),s("li",[t._v("在之后请求该资源的时候，会带有 if-modified-since 请求头，它的值是上一次 Last-Modified 响应头中的时间戳。")]),t._v(" "),s("li",[t._v("服务器收到带有 if-modified-since 请求头的请求，根据请求头中的时间戳，对文件进行判断")]),t._v(" "),s("li",[t._v("如果文件内容在该时间戳之后到当前时间里没有被修改，那么服务器返回一个 304 响应，该响应表示只有 HEAD 没有 BODY。浏览器如果收到 304 响应，就会以缓存的内容作为 BODY。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" stats "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("statSync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filePath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" timeStamp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'if-modified-since'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" status "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeStamp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeStamp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mtimeMs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果timeStamp和stats.mtimeMS相等，说明文件内容没有修改")]),t._v("\n  status "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("304")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nres"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'Cache-Control'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'max-age=86400'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 强缓存一天")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'Last-Modified'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mtimeMs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 协商缓存响应头")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"etag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#etag"}},[t._v("#")]),t._v(" ETag")]),t._v(" "),s("p",[t._v("ETag（实体标签）是服务器响应请求时发送给客户端的一个标识符，代表当前资源的版本。当资源更新时，ETag 也会更新。")]),t._v(" "),s("p",[t._v("它的机制和 Last-Modified 大同小异，只是把 Last-Modified 的时间戳换成 Etag 签名，相应地把 If-Modified-Since 字段换成 If-None-Match 字段。Etag 的值可以用资源文件的 MD5 或 sha 签名。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" crypto "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'crypto'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" http "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 生成 ETag，通常使用文件内容的哈希值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("generateETag")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" crypto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createHash")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'md5'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("digest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hex'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nhttp\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" filePath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./path/to/your/file'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 文件路径")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fileContent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileSync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filePath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" etag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("generateETag")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fileContent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检查请求头中的 If-None-Match 值是否与当前 ETag 相等")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" clientETag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'if-none-match'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clientETag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" clientETag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" etag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ETag 相等，返回 304，不需要发送文件内容")]),t._v("\n      res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("304")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'Cache-Control'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'max-age=86400'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 强缓存一天")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ETag 不同，发送新的文件内容")]),t._v("\n      res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'Cache-Control'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'max-age=86400'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 强缓存一天")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ETag")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" etag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送新的 ETag")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fileContent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"协商缓存为什么有两种"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存为什么有两种"}},[t._v("#")]),t._v(" 协商缓存为什么有两种？")]),t._v(" "),s("p",[t._v("因为，有时候我们的网站是分布式部署在多台服务器上，一个资源文件可能在每台服务器上都有副本，相应地资源文件被修改的时候，新的文件要同步到各个服务器上，导致各个文件副本的修改时间不一定相同。那么当用户一次访问请求的服务器和另一次访问请求的服务器不同时，就有可能因为两个文件副本的修改时间不同而使得 Last-Modified 形式的协商缓存失效。")]),t._v(" "),s("p",[t._v("如果这种情况采用 Etag 形式的协商缓存，根据文件内容而不是修改时间来判断缓存，就不会有这个问题了。")]),t._v(" "),s("h3",{attrs:{id:"协商缓存失效场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存失效场景"}},[t._v("#")]),t._v(" 协商缓存失效场景")]),t._v(" "),s("p",[t._v("浏览器的强制刷新也可以清除协商缓存，因为当浏览器强制刷新的时候，请求头不会带上 if-modified-since 或 if-none-match 信息。")])])}),[],!1,null,null,null);s.default=e.exports}}]);