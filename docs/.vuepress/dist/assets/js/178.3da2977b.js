(window.webpackJsonp=window.webpackJsonp||[]).push([[178],{627:function(r,s,a){"use strict";a.r(s);var i=a(25),t=Object(i.a)({},(function(){var r=this,s=r._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[s("h1",{attrs:{id:"spring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring"}},[r._v("#")]),r._v(" Spring")]),r._v(" "),s("h2",{attrs:{id:"概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[r._v("#")]),r._v(" 概念")]),r._v(" "),s("h3",{attrs:{id:"广义的-spring-spring-技术栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#广义的-spring-spring-技术栈"}},[r._v("#")]),r._v(" 广义的 Spring：Spring 技术栈")]),r._v(" "),s("p",[r._v("广义上的 Spring 泛指以 Spring Framework 为核心的 Spring 技术栈。")]),r._v(" "),s("p",[r._v("经过十多年的发展，Spring 已经不再是一个单纯的应用框架，而是逐渐发展成为一个由多个不同子项目（模块）组成的成熟技术，例如 Spring Framework、Spring MVC、SpringBoot、Spring Cloud、Spring Data、Spring Security 等，其中 Spring Framework 是其他子项目的基础。")]),r._v(" "),s("h3",{attrs:{id:"狭义的-spring-spring-framework"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#狭义的-spring-spring-framework"}},[r._v("#")]),r._v(" 狭义的 Spring：Spring Framework")]),r._v(" "),s("p",[r._v("狭义的 Spring 特指 Spring Framework，通常我们将它称为 Spring 框架。")]),r._v(" "),s("p",[r._v("Spring 框架是一个分层的、面向切面的 Java 应用程序的一站式轻量级解决方案，它是 Spring 技术栈的核心和基础，是为了解决企业级应用开发的复杂性而创建的。")]),r._v(" "),s("h2",{attrs:{id:"spring-framework"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-framework"}},[r._v("#")]),r._v(" Spring Framework")]),r._v(" "),s("p",[r._v("Spring 框架有两个最核心概念： IoC 和 AOP。")]),r._v(" "),s("h3",{attrs:{id:"ioc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ioc"}},[r._v("#")]),r._v(" IoC")]),r._v(" "),s("p",[r._v("Inverse of Control 的简写，译为“控制反转”，指把创建对象过程交给 Spring 进行管理。")]),r._v(" "),s("h3",{attrs:{id:"aop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aop"}},[r._v("#")]),r._v(" AOP")]),r._v(" "),s("p",[r._v("Aspect Oriented Programming 的简写，译为“面向切面编程”。AOP 用来封装多个类的公共行为，将那些与业务无关，却为业务模块所共同调用的逻辑封装起来，减少系统的重复代码，降低模块间的耦合度。另外，AOP 还解决一些系统层面上的问题，比如日志、事务、权限等。")]),r._v(" "),s("h3",{attrs:{id:"模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块"}},[r._v("#")]),r._v(" 模块")]),r._v(" "),s("h4",{attrs:{id:"_1、spring-core-container-核心容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、spring-core-container-核心容器"}},[r._v("#")]),r._v(" 1、Spring Core Container （核心容器）")]),r._v(" "),s("p",[r._v("spring core 提供了 IOC,DI,Bean 配置装载创建的核心实现。核心概念： Beans、BeanFactory、BeanDefinitions、ApplicationContext。")]),r._v(" "),s("ul",[s("li",[r._v("spring-core ：IOC 和 DI 的基本实现")]),r._v(" "),s("li",[r._v("spring-beans：BeanFactory 和 Bean 的装配管理(BeanFactory)")]),r._v(" "),s("li",[r._v("spring-context：Spring context 上下文，即 IOC 容器(AppliactionContext)")]),r._v(" "),s("li",[r._v("spring-expression：spring 表达式语言")])]),r._v(" "),s("h4",{attrs:{id:"_2、spring-aop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、spring-aop"}},[r._v("#")]),r._v(" 2、Spring AOP")]),r._v(" "),s("ul",[s("li",[r._v("spring-aop：面向切面编程的应用模块，整合 ASM，CGLib，JDK Proxy")]),r._v(" "),s("li",[r._v("spring-aspects：集成 AspectJ，AOP 应用框架")]),r._v(" "),s("li",[r._v("spring-instrument：动态 Class Loading 模块")])]),r._v(" "),s("h4",{attrs:{id:"_3、spring-data-access"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、spring-data-access"}},[r._v("#")]),r._v(" 3、Spring Data Access")]),r._v(" "),s("ul",[s("li",[r._v("spring-jdbc：spring 对 JDBC 的封装，用于简化 jdbc 操作")]),r._v(" "),s("li",[r._v("spring-orm：java 对象与数据库数据的映射框架")]),r._v(" "),s("li",[r._v("spring-oxm：对象与 xml 文件的映射框架")]),r._v(" "),s("li",[r._v("spring-jms： Spring 对 Java Message Service(java 消息服务)的封装，用于服务之间相互通信")]),r._v(" "),s("li",[r._v("spring-tx：spring jdbc 事务管理")])]),r._v(" "),s("h4",{attrs:{id:"_4、spring-web"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、spring-web"}},[r._v("#")]),r._v(" 4、Spring Web")]),r._v(" "),s("ul",[s("li",[r._v("spring-web：最基础的 web 支持，建立于 spring-context 之上，通过 servlet 或 listener 来初始化 IOC 容器")]),r._v(" "),s("li",[r._v("spring-webmvc：实现 web mvc")]),r._v(" "),s("li",[r._v("spring-websocket：与前端的全双工通信协议")]),r._v(" "),s("li",[r._v("spring-webflux：Spring 5.0 提供的，用于取代传统 java servlet，非阻塞式 Reactive Web 框架，异步，非阻塞，事件驱动的服务")])]),r._v(" "),s("h4",{attrs:{id:"_5、spring-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、spring-message"}},[r._v("#")]),r._v(" 5、Spring Message")]),r._v(" "),s("p",[r._v("Spring-messaging：spring 4.0 提供的，为 Spring 集成一些基础的报文传送服务")]),r._v(" "),s("h4",{attrs:{id:"_6、spring-test"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、spring-test"}},[r._v("#")]),r._v(" 6、Spring test")]),r._v(" "),s("p",[r._v("spring-test：集成测试支持，主要是对 junit 的封装")])])}),[],!1,null,null,null);s.default=t.exports}}]);