(window.webpackJsonp=window.webpackJsonp||[]).push([[174],{622:function(a,v,t){"use strict";t.r(v);var s=t(25),r=Object(s.a)({},(function(){var a=this,v=a._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h1",{attrs:{id:"java-的基本概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-的基本概念"}},[a._v("#")]),a._v(" Java 的基本概念")]),a._v(" "),v("h2",{attrs:{id:"jvm、jre-和-jdk"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#jvm、jre-和-jdk"}},[a._v("#")]),a._v(" JVM、JRE 和 JDK")]),a._v(" "),v("h3",{attrs:{id:"jvm-java-virtual-machine-java-虚拟机"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#jvm-java-virtual-machine-java-虚拟机"}},[a._v("#")]),a._v(" JVM (Java Virtual Machine) - Java 虚拟机")]),a._v(" "),v("h4",{attrs:{id:"jvm-是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#jvm-是什么"}},[a._v("#")]),a._v(" "),v("strong",[a._v("JVM 是什么？")])]),a._v(" "),v("ul",[v("li",[v("strong",[a._v("JVM 是运行 Java 程序的虚拟环境")]),a._v("。它是 Java 程序能够在不同操作系统上运行的原因。JVM 负责将编译过的 Java 字节码（.class 文件）转换成机器代码，并执行这些代码。")])]),a._v(" "),v("h4",{attrs:{id:"特性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[a._v("#")]),a._v(" "),v("strong",[a._v("特性：")])]),a._v(" "),v("ol",[v("li",[v("strong",[a._v("跨平台")]),a._v("：JVM 是 Java 实现“一次编写，到处运行”的关键。无论在 Windows、Linux 还是 macOS 上，只要有相应的 JVM，Java 程序都可以运行。")]),a._v(" "),v("li",[v("strong",[a._v("内存管理")]),a._v("：JVM 自动管理内存分配和垃圾回收，使得开发者无需手动释放内存。")]),a._v(" "),v("li",[v("strong",[a._v("安全性")]),a._v("：JVM 提供一个安全的运行环境，通过字节码验证、权限控制等机制，保护系统免受恶意代码的侵害。")])]),a._v(" "),v("h4",{attrs:{id:"通俗的比喻"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#通俗的比喻"}},[a._v("#")]),a._v(" "),v("strong",[a._v("通俗的比喻：")])]),a._v(" "),v("ul",[v("li",[a._v("把 JVM 想象成一台虚拟的咖啡机，它知道如何读取和理解咖啡豆（Java 字节码），并将其转换为咖啡粉（机器代码），然后冲泡出一杯杯可口的咖啡（运行程序）。不论是在公寓、咖啡厅还是在公司里（不同的操作系统），JVM 都能制作出原味的咖啡。")])]),a._v(" "),v("h3",{attrs:{id:"jre-java-runtime-environment-java-运行环境"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#jre-java-runtime-environment-java-运行环境"}},[a._v("#")]),a._v(" JRE (Java Runtime Environment) - Java 运行环境")]),a._v(" "),v("h4",{attrs:{id:"jre-是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#jre-是什么"}},[a._v("#")]),a._v(" "),v("strong",[a._v("JRE 是什么？")])]),a._v(" "),v("ul",[v("li",[v("strong",[a._v("JRE 是一个用于运行 Java 程序的环境")]),a._v("。它包含 JVM 以及 Java 标准库和其他支持文件。")])]),a._v(" "),v("h4",{attrs:{id:"特性-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#特性-2"}},[a._v("#")]),a._v(" "),v("strong",[a._v("特性：")])]),a._v(" "),v("ol",[v("li",[v("strong",[a._v("包含 JVM")]),a._v("：JRE 内部包含了 JVM，因此它可以执行 Java 字节码。")]),a._v(" "),v("li",[v("strong",[a._v("标准类库")]),a._v("：JRE 包含了运行 Java 程序所需的标准类库，如集合框架、IO 库等。")]),a._v(" "),v("li",[v("strong",[a._v("运行时环境")]),a._v("：它提供了 Java 程序运行所需的所有文件和资源，但不包括开发工具（如编译器）。")])]),a._v(" "),v("h4",{attrs:{id:"通俗的比喻-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#通俗的比喻-2"}},[a._v("#")]),a._v(" "),v("strong",[a._v("通俗的比喻：")])]),a._v(" "),v("ul",[v("li",[a._v("想象 JRE 是一个咖啡工作台，不仅包含了虚拟的咖啡机（JVM），还包含了制作咖啡所需的各种工具和材料，例如牛奶，焦糖，咖啡杯（Java 类库）。用户在这个工作台上就可以运行咖啡机，做出各种口味的咖啡。")])]),a._v(" "),v("h3",{attrs:{id:"jdk-java-development-kit-java-开发工具包"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#jdk-java-development-kit-java-开发工具包"}},[a._v("#")]),a._v(" JDK (Java Development Kit) - Java 开发工具包")]),a._v(" "),v("h4",{attrs:{id:"jdk-是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#jdk-是什么"}},[a._v("#")]),a._v(" "),v("strong",[a._v("JDK 是什么？")])]),a._v(" "),v("ul",[v("li",[v("strong",[a._v("JDK 是用于开发 Java 应用程序的完整开发工具包")]),a._v("。它不仅包含 JRE，还提供了一系列开发工具，如编译器、调试器等。")])]),a._v(" "),v("h4",{attrs:{id:"特性-3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#特性-3"}},[a._v("#")]),a._v(" "),v("strong",[a._v("特性：")])]),a._v(" "),v("ol",[v("li",[v("strong",[a._v("包含 JRE")]),a._v("：JDK 包含了运行 Java 程序所需的 JRE，因此可以运行和测试 Java 程序。")]),a._v(" "),v("li",[v("strong",[a._v("开发工具")]),a._v("：JDK 提供了编译 Java 源代码的工具（"),v("code",[a._v("javac")]),a._v("）、打包工具（"),v("code",[a._v("jar")]),a._v("）、调试工具（"),v("code",[a._v("jdb")]),a._v("）等。")]),a._v(" "),v("li",[v("strong",[a._v("附加工具和库")]),a._v("：JDK 还附带了一些高级的开发工具和库，用于开发和调试更复杂的 Java 应用程序。")])]),a._v(" "),v("h4",{attrs:{id:"通俗的比喻-3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#通俗的比喻-3"}},[a._v("#")]),a._v(" "),v("strong",[a._v("通俗的比喻：")])]),a._v(" "),v("ul",[v("li",[a._v("JDK 就像是一个完整的咖啡工作室，里面不仅有虚拟的咖啡机（JVM）和咖啡工作台（JRE），还有烘焙咖啡豆的所有工具（开发工具）。它提供了你需要的所有工具，让你可以从头开始制作自己的咖啡豆（开发 Java 程序），再用它们来制作咖啡。")])]),a._v(" "),v("h3",{attrs:{id:"总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),v("ul",[v("li",[v("strong",[a._v("JVM")]),a._v(" 是用于运行 Java 字节码的虚拟机。")]),a._v(" "),v("li",[v("strong",[a._v("JRE")]),a._v(" 包含 JVM 和运行 Java 程序所需的类库，是用于执行 Java 程序的环境。")]),a._v(" "),v("li",[v("strong",[a._v("JDK")]),a._v(" 是开发 Java 程序的工具包，包含 JRE 以及编译、调试等开发工具。")])]),a._v(" "),v("p",[a._v("换句话说，JVM 是运行 Java 程序的“引擎”，JRE 是包含 JVM 和标准类库的“运行环境”，而 JDK 则是开发 Java 程序的“工具箱”。")]),a._v(" "),v("h2",{attrs:{id:"java-file-java-、kotlin-file-kt-、groovy-file-groovy"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-file-java-、kotlin-file-kt-、groovy-file-groovy"}},[a._v("#")]),a._v(" Java File（.java）、Kotlin File（.kt）、Groovy File（.groovy）")]),a._v(" "),v("p",[a._v("Java、Kotlin 和 Groovy 都是可以运行在 JVM（Java 虚拟机）上的编程语言。它们有各自的文件类型和特性。我们可以用不同风格编写“咖啡食谱”来比喻它们，帮助理解。")]),a._v(" "),v("h3",{attrs:{id:"java-file-java"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-file-java"}},[a._v("#")]),a._v(" Java File (.java)")]),a._v(" "),v("h4",{attrs:{id:"java-是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-是什么"}},[a._v("#")]),a._v(" "),v("strong",[a._v("Java 是什么？")])]),a._v(" "),v("ul",[v("li",[v("strong",[a._v("Java 是一种强类型、面向对象的编程语言")]),a._v("。它是最早也是最广泛使用的 JVM 语言之一，具有稳定、安全、跨平台的特点。")])]),a._v(" "),v("h4",{attrs:{id:"特性-4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#特性-4"}},[a._v("#")]),a._v(" "),v("strong",[a._v("特性：")])]),a._v(" "),v("ol",[v("li",[v("strong",[a._v("静态类型")]),a._v("：Java 是静态类型语言，这意味着你在编译时必须声明变量的类型。例如，"),v("code",[a._v("int num = 5;")]),a._v(" 这里的 "),v("code",[a._v("num")]),a._v(" 是整数类型。")]),a._v(" "),v("li",[v("strong",[a._v("面向对象")]),a._v("：Java 强调面向对象编程的原则，如继承、封装、多态等。")]),a._v(" "),v("li",[v("strong",[a._v("广泛使用")]),a._v("：Java 拥有丰富的生态系统，被大量企业应用于开发大型系统和服务器端应用。")]),a._v(" "),v("li",[v("strong",[a._v("显式声明")]),a._v("：Java 代码通常比较详细和冗长，因为它要求显式地定义类型和控制流程。")])]),a._v(" "),v("h4",{attrs:{id:"通俗的比喻-4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#通俗的比喻-4"}},[a._v("#")]),a._v(" "),v("strong",[a._v("通俗的比喻：")])]),a._v(" "),v("ul",[v("li",[a._v("把 Java 文件 (.java) 想象成一本详细的“咖啡食谱”书。每一步都写得非常清楚，从选豆、磨豆到冲泡的每个细节都有详细的说明，确保任何人都能按照步骤做出一杯标准的咖啡。")])]),a._v(" "),v("h4",{attrs:{id:"示例代码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#示例代码"}},[a._v("#")]),a._v(" "),v("strong",[a._v("示例代码：")])]),a._v(" "),v("div",{staticClass:"language-java extra-class"},[v("pre",{pre:!0,attrs:{class:"language-java"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),v("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CoffeeMaker")]),a._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),v("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),v("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),v("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Making a cup of coffee!"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),v("h3",{attrs:{id:"kotlin-file-kt"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#kotlin-file-kt"}},[a._v("#")]),a._v(" Kotlin File (.kt)")]),a._v(" "),v("h4",{attrs:{id:"kotlin-是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#kotlin-是什么"}},[a._v("#")]),a._v(" "),v("strong",[a._v("Kotlin 是什么？")])]),a._v(" "),v("ul",[v("li",[v("strong",[a._v("Kotlin 是一种现代化的、静态类型的编程语言")]),a._v("，它简化了 Java 的一些复杂性，同时保持与 Java 的高度兼容性。Kotlin 由 JetBrains 开发，并由 Google 官方推荐用于 Android 开发。")])]),a._v(" "),v("h4",{attrs:{id:"特性-5"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#特性-5"}},[a._v("#")]),a._v(" "),v("strong",[a._v("特性：")])]),a._v(" "),v("ol",[v("li",[v("strong",[a._v("简洁")]),a._v("：Kotlin 代码更简洁，比 Java 更少的样板代码（boilerplate）。它提供了许多语法糖，使得代码更具可读性。")]),a._v(" "),v("li",[v("strong",[a._v("空安全")]),a._v("：Kotlin 在设计时特别关注空指针异常问题，提供了原生的空安全（null safety）机制。")]),a._v(" "),v("li",[v("strong",[a._v("函数式编程")]),a._v("：Kotlin 支持函数式编程特性，如高阶函数、Lambda 表达式等，使得开发更灵活。")]),a._v(" "),v("li",[v("strong",[a._v("互操作性")]),a._v("：Kotlin 可以无缝调用 Java 代码，且 Java 也能调用 Kotlin 代码，使得它很适合与现有的 Java 项目一起使用。")])]),a._v(" "),v("h4",{attrs:{id:"通俗的比喻-5"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#通俗的比喻-5"}},[a._v("#")]),a._v(" "),v("strong",[a._v("通俗的比喻：")])]),a._v(" "),v("ul",[v("li",[a._v("把 Kotlin 文件 (.kt) 想象成一个简洁的“咖啡食谱”笔记。它省略了很多冗长的步骤，只保留了最关键的部分，让你更快、更轻松地做出美味的咖啡。")])]),a._v(" "),v("p",[v("strong",[a._v("示例代码：")])]),a._v(" "),v("div",{staticClass:"language-kotlin extra-class"},[v("pre",{pre:!0,attrs:{class:"language-kotlin"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fun")]),a._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),v("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),v("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[v("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Making a cup of coffee!"')])]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),v("h3",{attrs:{id:"groovy-file-groovy"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#groovy-file-groovy"}},[a._v("#")]),a._v(" Groovy File (.groovy)")]),a._v(" "),v("h4",{attrs:{id:"groovy-是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#groovy-是什么"}},[a._v("#")]),a._v(" "),v("strong",[a._v("Groovy 是什么？")])]),a._v(" "),v("ul",[v("li",[v("strong",[a._v("Groovy 是一种动态的、面向对象的编程语言")]),a._v("，它与 Java 高度兼容，并增强了 Java 语言的功能。Groovy 常用于脚本编写、快速原型开发和构建自动化工具中。")])]),a._v(" "),v("h4",{attrs:{id:"特性-6"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#特性-6"}},[a._v("#")]),a._v(" "),v("strong",[a._v("特性：")])]),a._v(" "),v("ol",[v("li",[v("strong",[a._v("动态类型")]),a._v("：Groovy 支持动态类型，这使得它在运行时可以决定变量的类型，代码编写时更加灵活。")]),a._v(" "),v("li",[v("strong",[a._v("脚本友好")]),a._v("：Groovy 允许以脚本方式编写代码，不需要像 Java 那样编写完整的类和方法定义。")]),a._v(" "),v("li",[v("strong",[a._v("内置集合和正则表达式支持")]),a._v("：Groovy 对集合处理和正则表达式提供了更简单的语法。")]),a._v(" "),v("li",[v("strong",[a._v("DSL 支持")]),a._v("：Groovy 很适合创建领域特定语言（DSLs），这在构建工具（如 Gradle）和配置文件中很有用。")])]),a._v(" "),v("h4",{attrs:{id:"通俗的比喻-6"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#通俗的比喻-6"}},[a._v("#")]),a._v(" "),v("strong",[a._v("通俗的比喻：")])]),a._v(" "),v("ul",[v("li",[a._v("把 Groovy 文件 (.groovy) 想象成一个“咖啡食谱”草稿本。你可以随意涂鸦，快速尝试不同的配方，不需要太多的结构化的步骤，让你可以更自由地创新。")])]),a._v(" "),v("h4",{attrs:{id:"示例代码-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#示例代码-2"}},[a._v("#")]),a._v(" "),v("strong",[a._v("示例代码：")])]),a._v(" "),v("div",{staticClass:"language-groovy extra-class"},[v("pre",{pre:!0,attrs:{class:"language-groovy"}},[v("code",[a._v("println "),v("span",{pre:!0,attrs:{class:"token interpolation-string"}},[v("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Making a cup of coffee!"')])]),a._v("\n")])])]),v("h3",{attrs:{id:"总结与对比"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结与对比"}},[a._v("#")]),a._v(" 总结与对比")]),a._v(" "),v("table",[v("thead",[v("tr",[v("th",[a._v("特性")]),a._v(" "),v("th",[a._v("Java (.java)")]),a._v(" "),v("th",[a._v("Kotlin (.kt)")]),a._v(" "),v("th",[a._v("Groovy (.groovy)")])])]),a._v(" "),v("tbody",[v("tr",[v("td",[a._v("类型系统")]),a._v(" "),v("td",[a._v("静态类型，强类型")]),a._v(" "),v("td",[a._v("静态类型（支持类型推断）")]),a._v(" "),v("td",[a._v("动态类型")])]),a._v(" "),v("tr",[v("td",[a._v("语法简洁性")]),a._v(" "),v("td",[a._v("详细、冗长")]),a._v(" "),v("td",[a._v("简洁、现代")]),a._v(" "),v("td",[a._v("灵活、简洁")])]),a._v(" "),v("tr",[v("td",[a._v("空安全")]),a._v(" "),v("td",[a._v("手动检查")]),a._v(" "),v("td",[a._v("内置空安全机制")]),a._v(" "),v("td",[a._v("需要手动处理")])]),a._v(" "),v("tr",[v("td",[a._v("脚本支持")]),a._v(" "),v("td",[a._v("需要完整的类和方法定义")]),a._v(" "),v("td",[a._v("支持脚本方式编写")]),a._v(" "),v("td",[a._v("天然支持脚本编写")])]),a._v(" "),v("tr",[v("td",[a._v("函数式编程")]),a._v(" "),v("td",[a._v("基本支持")]),a._v(" "),v("td",[a._v("强支持")]),a._v(" "),v("td",[a._v("支持")])]),a._v(" "),v("tr",[v("td",[a._v("互操作性")]),a._v(" "),v("td",[a._v("与其他 JVM 语言兼容")]),a._v(" "),v("td",[a._v("高度兼容 Java")]),a._v(" "),v("td",[a._v("高度兼容 Java")])]),a._v(" "),v("tr",[v("td",[a._v("常见应用场景")]),a._v(" "),v("td",[a._v("企业级应用、大型系统")]),a._v(" "),v("td",[a._v("Android 开发、现代应用")]),a._v(" "),v("td",[a._v("构建工具、脚本、自动化任务")])])])]),a._v(" "),v("p",[a._v("Java 提供了稳定的基础，Kotlin 带来了现代化的简洁性和高效性，而 Groovy 则提供了灵活的脚本和快速开发能力。")]),a._v(" "),v("h2",{attrs:{id:"java-的版本解释"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-的版本解释"}},[a._v("#")]),a._v(" Java 的版本解释")]),a._v(" "),v("h3",{attrs:{id:"前置知识"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前置知识"}},[a._v("#")]),a._v(" 前置知识")]),a._v(" "),v("ul",[v("li",[v("p",[a._v("Java 第一代平台： 1995 年，Sun 公司首推 Oak，因 Oak 商标已被占用后改名为 Java。1996 年 1 月，Sun 公司发布了 Java 的第一个开发工具包（JDK 1.0），也就是最初版本 Java1.0")])]),a._v(" "),v("li",[v("p",[a._v("Java 第二代平台：1999 年 6 月，Sun 公司发布了第二代 Java 平台（简称为 Java2），它有 3 个版本：")]),a._v(" "),v("ul",[v("li",[a._v("J2ME（Java2 Micro Edition，Java2 平台的微型版），应用于移动、无线及有限资源的环境；")]),a._v(" "),v("li",[a._v("J2SE（Java2 Standard Edition，Java 2 平台的标准版），应用于桌面环境；")]),a._v(" "),v("li",[a._v("J2EE（Java2 Enterprise Edition，Java 2 平台的企业版），应用于基于 Java 的应用服务器。")])])]),a._v(" "),v("li",[v("p",[a._v("J2SE 改名：2004 年 9 月 30 日，J2SE 1.5 发布，为了表示该版本的重要性，J2SE 1.5 更名为 Java SE 5.0（内部版本号 1.5.0），代号为“Tiger”，Tiger 包含了从 1996 年发布 1.0 版本以来的最重大的更新。")])]),a._v(" "),v("li",[v("p",[a._v("第二代平台改名：2005 年 6 月，在 Java One 大会上，Sun 公司发布了 Java SE 6。此时，Java 的各种版本已经更名，已取消其中的数字 2，如 J2EE 更名为 JavaEE，J2SE 更名为 JavaSE，J2ME 更名为 JavaME。")])])]),a._v(" "),v("p",[a._v("自 1996 年发布 Java1.0；直到 2004 年 9 月版本号提升为 5.0，这一新版本为 Java SE5.0（或 J2SE1.5），在 2005 年 6 月 Sun 公司终结了已经有 8 年历史的 J2SE、J2EE、J2ME 的命名方式启用了今天的 Java SE、Java EE、Java ME 命名方式，而此后的版本为 Java SE6、Java SE7、Java SE8、Java SE9、Java SE10、Java SE11、Java SE12… Java SE17 等。")]),a._v(" "),v("h3",{attrs:{id:"java-和-jdk-的关系"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-和-jdk-的关系"}},[a._v("#")]),a._v(" Java 和 JDK 的关系")]),a._v(" "),v("ul",[v("li",[v("p",[a._v("Java SE，现在提到的 Java 指代的就是 Java SE")]),a._v(" "),v("p",[a._v("Java 平台标准版 (Java SE) API 定义了用于通用计算的核心 Java 平台。这些 API 称为 java")])]),a._v(" "),v("li",[v("p",[a._v("JDK")]),a._v(" "),v("p",[a._v("Java 开发工具包 (JDK) API 特定于 JDK，不一定在 Java SE 平台的所有实现中都可用。这些 API 称为 jdk。")])])]),a._v(" "),v("p",[a._v("自 1996 年发布 JDK1.0；此后命名为 JDK1.1、JDK1.2、JDK1.3、JDK1.4、采用 1.X 的命名方式，即 JDK 在 Java1.0 到 Java9 对应每一个版本号 ：JDK1.0、JDK1.2 … JDK1.8、JDK1.9。Java10 以后我们可以理解为 JDK 对应名称为：JDK10、JDK11、JDK12 … JDK17")]),a._v(" "),v("p",[a._v("在程序员眼中，Java（或者说 Java SE）和 JDK 是一样的，都是指代 Java 的开发工具包。")]),a._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://cloud.tencent.com/developer/article/2128820",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java 版本和 JDK 版本"),v("OutboundLink")],1)]),a._v(" "),v("li",[v("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1873446",target:"_blank",rel:"noopener noreferrer"}},[a._v("JDK 的版本号解惑"),v("OutboundLink")],1)])]),a._v(" "),v("h2",{attrs:{id:"idea"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#idea"}},[a._v("#")]),a._v(" IDEA")]),a._v(" "),v("p",[v("a",{attrs:{href:"https://ziby0nwxdov.feishu.cn/wiki/OyLBwBd9oiVFTykXrHvcEB91nyb",target:"_blank",rel:"noopener noreferrer"}},[a._v("IDEA 激活教程"),v("OutboundLink")],1),a._v("\n激活大法： https://www.yuque.com/ziyou-urpsp/iqd2l9/zto1s0iv7ot18qhz\n特别提示：复制上面的链接一定要用电脑浏览器打开！\n重要：1、一定要解压到桌面再运行工具（请勿与其它工具一起使用）请打开链接仔细查看教程。\n2、虚拟产品具有可复制性，如果不是激活工具本身的原因请不要以以下借口退宽，如：看错了，买错了，这个不是我想要的等等原因\n【好·评】后赠送：\n各类编程语言教程合集\n涵盖 Python、Php、Script 等各类编程语言最新教程")]),a._v(" "),v("p",[a._v("请添加客服 v 有任何问题可以及时联系：lkjhgfdsa06730")])])}),[],!1,null,null,null);v.default=r.exports}}]);