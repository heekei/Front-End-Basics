(window.webpackJsonp=window.webpackJsonp||[]).push([[175],{625:function(a,t,s){"use strict";s.r(t);var e=s(25),n=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"maven-基础"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maven-基础"}},[a._v("#")]),a._v(" Maven 基础")]),a._v(" "),t("p",[a._v("Maven 是一个 Java 项目管理和构建工具，它可以定义项目结构、项目依赖，并使用统一的方式进行自动化构建，是 Java 项目不可缺少的工具。")]),a._v(" "),t("h2",{attrs:{id:"为什么需要-maven"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要-maven"}},[a._v("#")]),a._v(" 为什么需要 Maven")]),a._v(" "),t("p",[a._v("在不使用 Maven 之前，先来看看一个 Java 项目需要的东西。")]),a._v(" "),t("p",[a._v("首先，我们需要确定引入哪些依赖包。例如，如果我们需要用到 commons logging，我们就必须把 commons logging 的 jar 包放入 classpath。如果我们还需要 log4j，就需要把 log4j 相关的 jar 包都放到 classpath 中。这些就是"),t("strong",[a._v("依赖包的管理")]),a._v("。")]),a._v(" "),t("p",[a._v("其次，我们要确定"),t("strong",[a._v("项目的目录结构")]),a._v("。例如，src 目录存放 Java 源码，resources 目录存放配置文件，bin 目录存放编译生成的.class 文件。")]),a._v(" "),t("p",[a._v("此外，我们还需要"),t("strong",[a._v("配置环境")]),a._v("，例如 JDK 的版本，编译打包的流程，当前代码的版本号。")]),a._v(" "),t("p",[a._v("最后，除了使用 Eclipse 这样的 IDE 进行编译外，我们还必须能通过"),t("strong",[a._v("命令行工具进行编译")]),a._v("，才能够让项目在一个独立的服务器上编译、测试、部署。")]),a._v(" "),t("p",[a._v("这些工作难度不大，但是非常琐碎且耗时。如果每一个项目都自己搞一套配置，肯定会一团糟。我们需要的是一个标准化的 Java 项目管理和构建工具。")]),a._v(" "),t("p",[a._v("Maven 就是是专门为 Java 项目打造的管理和构建工具，它的主要功能有：")]),a._v(" "),t("ul",[t("li",[a._v("提供了一套标准化的项目结构；")]),a._v(" "),t("li",[a._v("提供了一套标准化的构建流程（编译，测试，打包，发布……）；")]),a._v(" "),t("li",[a._v("提供了一套依赖管理机制。")])]),a._v(" "),t("h2",{attrs:{id:"maven-的主要功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maven-的主要功能"}},[a._v("#")]),a._v(" Maven 的主要功能")]),a._v(" "),t("p",[a._v("主要功能如下：")]),a._v(" "),t("ul",[t("li",[a._v("项目结构标准化：Maven 为 Java 项目提供了一套标准化的目录结构，例如 "),t("code",[a._v("src/main/java")]),a._v(" 用于存放 Java 源码，"),t("code",[a._v("src/main/resources")]),a._v(" 用于存放配置文件，"),t("code",[a._v("src/test/java")]),a._v(" 用于存放测试代码，"),t("code",[a._v("src/test/resources")]),a._v(" 用于存放测试配置文件。")]),a._v(" "),t("li",[a._v("构建流程标准化：Maven 提供了一套标准化的构建流程，包括编译、测试、打包、发布等步骤。通过配置 "),t("code",[a._v("pom.xml")]),a._v(" 文件，可以自定义构建流程。")]),a._v(" "),t("li",[a._v("依赖管理：Maven 提供了一套依赖管理机制，可以方便地管理项目依赖。通过在 "),t("code",[a._v("pom.xml")]),a._v(" 文件中声明依赖，Maven 会自动下载并管理这些依赖。")]),a._v(" "),t("li",[a._v("插件机制：Maven 提供了丰富的插件机制，可以方便地扩展构建功能。例如，可以使用 "),t("code",[a._v("maven-compiler-plugin")]),a._v(" 插件来配置编译选项，使用 "),t("code",[a._v("maven-surefire-plugin")]),a._v(" 插件来配置测试选项。")]),a._v(" "),t("li",[a._v("仓库管理：Maven 提供了仓库管理机制，可以方便地管理项目依赖。Maven 会从中央仓库、本地仓库和远程仓库中下载依赖。")])]),a._v(" "),t("h3",{attrs:{id:"maven-的项目目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maven-的项目目录"}},[a._v("#")]),a._v(" Maven 的项目目录")]),a._v(" "),t("p",[a._v("一个使用 Maven 管理的普通的 Java 项目，它的目录结构默认如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("a-maven-project\n├── pom.xml\n├── src\n│ ├── main\n│ │ ├── java\n│ │ └── resources\n│ └── test\n│ | ├── java\n│ | └── resources\n└── target\n")])])]),t("p",[a._v("项目的根目录 a-maven-project 是项目名，它有一个项目描述文件 pom.xml，存放 Java 源码的目录是 src/main/java，存放资源文件的目录是 src/main/resources，存放测试源码的目录是 src/test/java，存放测试资源的目录是 src/test/resources，最后，所有编译、打包生成的文件都放在 target 目录里。这些就是一个 Maven 项目的标准目录结构。")]),a._v(" "),t("p",[a._v("所有的目录结构都是约定好的标准结构，我们千万不要随意修改目录结构。使用标准结构不需要做任何配置，Maven 就可以正常使用。")]),a._v(" "),t("h3",{attrs:{id:"依赖管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#依赖管理"}},[a._v("#")]),a._v(" 依赖管理")]),a._v(" "),t("p",[a._v("设想一下手动安装依赖的过程，例如安装 Unit，JavaMail，MySQL 驱动等等，方法是通过搜索引擎搜索到项目的官网，然后手动下载 zip 包，解压，放入 classpath。如果依赖包还有依赖，还得重复这些步骤，这个过程非常繁琐。")]),a._v(" "),t("p",[a._v("aven 解决了依赖管理问题。例如，我们的项目依赖 abc 这个 jar 包，而 abc 又依赖 xyz 这个 jar 包。当我们声明了 abc 的依赖时，Maven 自动把 abc 和 xyz 都加入了我们的项目依赖，不需要我们自己去研究 abc 是否需要依赖 xyz。")]),a._v(" "),t("p",[a._v("因此，Maven 其中一个作用就是解决依赖管理。我们声明了自己的项目需要 abc，Maven 会自动导入 abc 的 jar 包，再判断出 abc 需要 xyz，又会自动导入 xyz 的 jar 包，这样，最终我们的项目会依赖 abc 和 xyz 两个 jar 包。")]),a._v(" "),t("p",[a._v("Maven 的依赖管理主要通过 "),t("code",[a._v("pom.xml")]),a._v(" 文件来实现。在 "),t("code",[a._v("pom.xml")]),a._v(" 文件中，可以声明项目的依赖，Maven 会自动下载并管理这些依赖。")]),a._v(" "),t("p",[a._v("一个复杂依赖示例：")]),a._v(" "),t("div",{staticClass:"language-xml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependencies")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("org.springframework.boot"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("spring-boot-starter-web"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("1.4.2.RELEASE"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependencies")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),t("p",[a._v("当我们声明一个 spring-boot-starter-web 依赖时，Maven 会自动解析并判断最终需要大概二三十个其他依赖,如果我们自己去手动管理这些依赖是非常费时费力的，而且出错的概率很大。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("spring-boot-starter-web\n  spring-boot-starter\n    spring-boot\n    sprint-boot-autoconfigure\n    spring-boot-starter-logging\n      logback-classic\n        logback-core\n        slf4j-api\n      jcl-over-slf4j\n        slf4j-api\n      jul-to-slf4j\n        slf4j-api\n      log4j-over-slf4j\n        slf4j-api\n    spring-core\n    snakeyaml\n  spring-boot-starter-tomcat\n    tomcat-embed-core\n    tomcat-embed-el\n    tomcat-embed-websocket\n      tomcat-embed-core\n  jackson-databind\n  ...\n")])])]),t("h4",{attrs:{id:"唯一-id-确定依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#唯一-id-确定依赖"}},[a._v("#")]),a._v(" 唯一 ID 确定依赖")]),a._v(" "),t("p",[a._v("对于某个依赖，Maven 只需要 3 个变量即可唯一确定某个 jar 包：")]),a._v(" "),t("ul",[t("li",[a._v("groupId：属于组织的名称，类似 Java 的包名；")]),a._v(" "),t("li",[a._v("artifactId：该 jar 包自身的名称，类似 Java 的类名；")]),a._v(" "),t("li",[a._v("version：该 jar 包的版本。")])]),a._v(" "),t("p",[a._v("通过上述 3 个变量，即可唯一确定某个 jar 包。Maven 通过对 jar 包进行 PGP 签名确保任何一个 jar 包一经发布就无法修改。修改已发布 jar 包的唯一方法是发布一个新版本。")]),a._v(" "),t("p",[a._v("因此，某个 jar 包一旦被 Maven 下载过，即可永久地安全缓存在本地。")]),a._v(" "),t("p",[t("strong",[a._v("注：只有以-SNAPSHOT 结尾的版本号会被 Maven 视为开发版本，开发版本每次都会重复下载，这种 SNAPSHOT 版本只能用于内部私有的 Maven repo，公开发布的版本不允许出现 SNAPSHOT。")])]),a._v(" "),t("h4",{attrs:{id:"依赖范围"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#依赖范围"}},[a._v("#")]),a._v(" 依赖范围")]),a._v(" "),t("p",[a._v("在 "),t("code",[a._v("pom.xml")]),a._v(" 文件中声明依赖时，可以指定依赖的范围。依赖范围决定了依赖在项目中的使用范围。")]),a._v(" "),t("p",[a._v("Maven 支持以下几种依赖范围：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("compile")]),a._v("：默认范围，编译、测试和运行时都会使用该 jar 包。")]),a._v(" "),t("li",[t("code",[a._v("provided")]),a._v("：编译和测试时使用，运行时由容器（JDK 或某个服务器）提供。")]),a._v(" "),t("li",[t("code",[a._v("runtime")]),a._v("：测试和运行时使用，编译时不使用。")]),a._v(" "),t("li",[t("code",[a._v("test")]),a._v("：测试时使用，编译和运行时不使用。")]),a._v(" "),t("li",[t("code",[a._v("system")]),a._v("：类似于 "),t("code",[a._v("provided")]),a._v("，但需要显式指定依赖的路径。")]),a._v(" "),t("li",[t("code",[a._v("import")]),a._v("：仅在 "),t("code",[a._v("<dependencyManagement>")]),a._v(" 中使用，用于导入其他 "),t("code",[a._v("pom.xml")]),a._v(" 文件中的依赖管理配置。")])]),a._v(" "),t("p",[a._v("其中，默认的 compile 是最常用的，Maven 会把这种类型的依赖直接放入 classpath。")]),a._v(" "),t("p",[a._v("test 依赖表示仅在测试时使用，正常运行时并不需要。最常用的 test 依赖就是 JUnit：")]),a._v(" "),t("div",{staticClass:"language-xml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("org.junit.jupiter"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("junit-jupiter-api"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("5.3.2"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("scope")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("test"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("scope")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),t("p",[a._v("runtime 依赖表示编译时不需要，但运行时需要。最典型的 runtime 依赖是 JDBC 驱动，例如 MySQL 驱动：")]),a._v(" "),t("div",{staticClass:"language-xml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("mysql"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("mysql-connector-java"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("5.1.48"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("scope")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("runtime"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("scope")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),t("p",[a._v("provided 依赖表示编译时需要，但运行时不需要。最典型的 provided 依赖是 Servlet API，编译的时候需要，但是运行时，Servlet 服务器内置了相关的 jar，所以运行期不需要：")]),a._v(" "),t("div",{staticClass:"language-xml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("jakarta.servlet"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("jakarta.servlet-api"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("4.0.0"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("scope")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("provided"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("scope")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),t("h4",{attrs:{id:"依赖排除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#依赖排除"}},[a._v("#")]),a._v(" 依赖排除")]),a._v(" "),t("p",[a._v("在 "),t("code",[a._v("pom.xml")]),a._v(" 文件中，使用 Maven 来管理项目依赖时，可能会遇到某些库引入了你不需要的传递性依赖。为了避免引入这些不必要的依赖，可以在声明依赖时使用 "),t("code",[a._v("<exclusions>")]),a._v(" 元素来排除特定的依赖。")]),a._v(" "),t("h4",{attrs:{id:"如何配置-exclusions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何配置-exclusions"}},[a._v("#")]),a._v(" 如何配置 "),t("code",[a._v("exclusions")])]),a._v(" "),t("p",[a._v("以下是一个完整的示例，展示如何在 "),t("code",[a._v("pom.xml")]),a._v(" 中排除某个传递性依赖：")]),a._v(" "),t("div",{staticClass:"language-xml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("com.example"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("example-library"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("1.0.0"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("exclusions")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("exclusion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("com.unwanted"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("unwanted-library"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("exclusion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("exclusions")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),t("h5",{attrs:{id:"解释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解释"}},[a._v("#")]),a._v(" 解释")]),a._v(" "),t("ul",[t("li",[t("strong",[t("code",[a._v("<dependency>")])]),a._v("：定义一个项目依赖。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("<groupId>")])]),a._v("：依赖的组织标识符。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("<artifactId>")])]),a._v("：依赖的项目名称。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("<version>")])]),a._v("：依赖的版本号。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("<exclusions>")])]),a._v("：用于排除特定传递性依赖的容器元素。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("<exclusion>")])]),a._v("：指定要排除的单个依赖。\n"),t("ul",[t("li",[t("strong",[t("code",[a._v("<groupId>")])]),a._v("：要排除的依赖的组织标识符。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("<artifactId>")])]),a._v("：要排除的依赖的项目名称。")])])])]),a._v(" "),t("h5",{attrs:{id:"使用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[a._v("#")]),a._v(" 使用场景")]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("避免冲突")]),a._v("：多个依赖可能引入不同版本的同一库，导致版本冲突。")]),a._v(" "),t("li",[t("strong",[a._v("减少体积")]),a._v("：排除不必要的库，减小应用体积，提高性能。")]),a._v(" "),t("li",[t("strong",[a._v("安全性")]),a._v("：移除已知存在漏洞的传递性依赖。")])]),a._v(" "),t("h3",{attrs:{id:"构建流程标准化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建流程标准化"}},[a._v("#")]),a._v(" 构建流程标准化")]),a._v(" "),t("p",[a._v("Maven 不但有标准化的项目结构，而且还有一套标准化的构建流程，可以自动化实现编译，打包，发布，等等。")]),a._v(" "),t("h4",{attrs:{id:"lifecycle、phase-和-goal"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lifecycle、phase-和-goal"}},[a._v("#")]),a._v(" Lifecycle、Phase 和 Goal")]),a._v(" "),t("p",[a._v("Maven 的生命周期（lifecycle）是由一系列阶段（phase）组成的，每个阶段又包含了一个或多个目标（goal）。Maven 的构建过程就是按照生命周期、阶段和目标的顺序依次执行的。")]),a._v(" "),t("ul",[t("li",[a._v("lifecycle 它包含一个或多个 phase，相当于 Java 的 package；")]),a._v(" "),t("li",[a._v("phase 它包含一个或多个 goal，相当于 Java 的 class；")]),a._v(" "),t("li",[a._v("goal 它其实才是真正干活的，相当于 class 的 method。")])]),a._v(" "),t("h5",{attrs:{id:"goal"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#goal"}},[a._v("#")]),a._v(" Goal")]),a._v(" "),t("p",[a._v("执行一个 phase 会触发一个或多个 goal，goal 的命名总是 abc:xyz 这种形式。")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"left"}},[a._v("执行的 Phase")]),a._v(" "),t("th",{staticStyle:{"text-align":"left"}},[a._v("对应执行的 Goal")])])]),a._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"left"}},[a._v("compile")]),a._v(" "),t("td",{staticStyle:{"text-align":"left"}},[a._v("compiler:compile")])]),a._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[a._v("test")]),a._v(" "),t("td",{staticStyle:{"text-align":"left"}},[a._v("surefire:test")])])])]),a._v(" "),t("p",[a._v("大多数情况，我们只要指定 phase，就默认执行这些 phase 默认绑定的 goal，只有少数情况，我们可以直接指定运行一个 goal，例如，启动 Tomcat 服务器：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("mvn tomcat:run\n")])])]),t("p",[a._v("所以通常情况，我们总是执行 phase 默认绑定的 goal，因此不必指定 goal。")]),a._v(" "),t("h4",{attrs:{id:"以内置的生命周期default为例-它包含以下阶段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#以内置的生命周期default为例-它包含以下阶段"}},[a._v("#")]),a._v(" 以内置的生命周期"),t("code",[a._v("default")]),a._v("为例，它包含以下阶段：")]),a._v(" "),t("p",[a._v("在 Maven 的构建生命周期中，"),t("code",[a._v("default")]),a._v(" 生命周期是最核心的部分，涵盖了从验证到部署的完整过程。每个阶段都有特定的目标（goal），这些目标由 Maven 插件执行。以下是 "),t("code",[a._v("default")]),a._v(" 生命周期中每个阶段的详细说明：")]),a._v(" "),t("h5",{attrs:{id:"_1-validate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-validate"}},[a._v("#")]),a._v(" 1. "),t("code",[a._v("validate")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：验证项目的配置信息是否正确，并确保所有必要的信息可用。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("：没有特定的默认 goal，通常根据具体插件和配置执行自定义的验证。")])]),a._v(" "),t("h5",{attrs:{id:"_2-initialize"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-initialize"}},[a._v("#")]),a._v(" 2. "),t("code",[a._v("initialize")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：初始化构建状态。例如，设置属性或环境变量。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("：没有特定的默认 goal，通常用于插件的初始化步骤。")])]),a._v(" "),t("h5",{attrs:{id:"_3-generate-sources"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-generate-sources"}},[a._v("#")]),a._v(" 3. "),t("code",[a._v("generate-sources")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：生成源代码。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("：通常由代码生成插件执行，如 "),t("code",[a._v("antlr:generate")]),a._v("。")])]),a._v(" "),t("h5",{attrs:{id:"_4-process-sources"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-process-sources"}},[a._v("#")]),a._v(" 4. "),t("code",[a._v("process-sources")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：处理生成的源代码，可能包括代码格式化或其他处理。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("：没有特定的默认 goal，通常由代码处理插件执行。")])]),a._v(" "),t("h5",{attrs:{id:"_5-generate-resources"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-generate-resources"}},[a._v("#")]),a._v(" 5. "),t("code",[a._v("generate-resources")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：生成资源文件。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("：没有特定的默认 goal，通常由资源生成插件执行。")])]),a._v(" "),t("h5",{attrs:{id:"_6-process-resources"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-process-resources"}},[a._v("#")]),a._v(" 6. "),t("code",[a._v("process-resources")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：复制和处理资源文件到目标目录。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("："),t("code",[a._v("resources:resources")]),a._v("，将资源文件复制到 "),t("code",[a._v("target")]),a._v(" 目录。")])]),a._v(" "),t("h5",{attrs:{id:"_7-compile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-compile"}},[a._v("#")]),a._v(" 7. "),t("code",[a._v("compile")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：编译项目的源代码。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("："),t("code",[a._v("compiler:compile")]),a._v("，将 "),t("code",[a._v(".java")]),a._v(" 源文件编译为 "),t("code",[a._v(".class")]),a._v(" 文件。")])]),a._v(" "),t("h5",{attrs:{id:"_8-process-classes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-process-classes"}},[a._v("#")]),a._v(" 8. "),t("code",[a._v("process-classes")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：处理编译后的类文件。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("：没有特定的默认 goal，通常用于字节码增强等。")])]),a._v(" "),t("h5",{attrs:{id:"_9-generate-test-sources"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-generate-test-sources"}},[a._v("#")]),a._v(" 9. "),t("code",[a._v("generate-test-sources")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：生成测试源代码。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("：通常由测试代码生成插件执行。")])]),a._v(" "),t("h5",{attrs:{id:"_10-process-test-sources"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-process-test-sources"}},[a._v("#")]),a._v(" 10. "),t("code",[a._v("process-test-sources")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：处理测试源代码。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("：没有特定的默认 goal，通常由测试代码处理插件执行。")])]),a._v(" "),t("h5",{attrs:{id:"_11-generate-test-resources"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11-generate-test-resources"}},[a._v("#")]),a._v(" 11. "),t("code",[a._v("generate-test-resources")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：生成测试资源文件。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("：没有特定的默认 goal，通常由测试资源生成插件执行。")])]),a._v(" "),t("h5",{attrs:{id:"_12-process-test-resources"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12-process-test-resources"}},[a._v("#")]),a._v(" 12. "),t("code",[a._v("process-test-resources")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：复制和处理测试资源文件到测试目标目录。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("："),t("code",[a._v("resources:testResources")]),a._v("，将测试资源文件复制到 "),t("code",[a._v("target")]),a._v(" 目录。")])]),a._v(" "),t("h5",{attrs:{id:"_13-test-compile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_13-test-compile"}},[a._v("#")]),a._v(" 13. "),t("code",[a._v("test-compile")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：编译测试源代码。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("："),t("code",[a._v("compiler:testCompile")]),a._v("，编译测试 "),t("code",[a._v(".java")]),a._v(" 文件。")])]),a._v(" "),t("h5",{attrs:{id:"_14-process-test-classes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_14-process-test-classes"}},[a._v("#")]),a._v(" 14. "),t("code",[a._v("process-test-classes")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：处理编译后的测试类文件。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("：没有特定的默认 goal，通常用于测试字节码增强等。")])]),a._v(" "),t("h5",{attrs:{id:"_15-test"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_15-test"}},[a._v("#")]),a._v(" 15. "),t("code",[a._v("test")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：运行测试。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("："),t("code",[a._v("surefire:test")]),a._v("，执行单元测试。")])]),a._v(" "),t("h5",{attrs:{id:"_16-prepare-package"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_16-prepare-package"}},[a._v("#")]),a._v(" 16. "),t("code",[a._v("prepare-package")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：为打包准备额外的步骤。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("：没有特定的默认 goal，通常用于预处理。")])]),a._v(" "),t("h5",{attrs:{id:"_17-package"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-package"}},[a._v("#")]),a._v(" 17. "),t("code",[a._v("package")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：将编译好的代码打包成可分发的格式（如 JAR 或 WAR）。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("："),t("code",[a._v("jar:jar")]),a._v("，"),t("code",[a._v("war:war")]),a._v("。")])]),a._v(" "),t("h5",{attrs:{id:"_18-pre-integration-test"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_18-pre-integration-test"}},[a._v("#")]),a._v(" 18. "),t("code",[a._v("pre-integration-test")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：执行集成测试前的必要步骤。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("：通常用于启动需要的环境或服务。")])]),a._v(" "),t("h5",{attrs:{id:"_19-integration-test"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_19-integration-test"}},[a._v("#")]),a._v(" 19. "),t("code",[a._v("integration-test")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：运行集成测试。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("：可能使用 "),t("code",[a._v("failsafe:integration-test")]),a._v("。")])]),a._v(" "),t("h5",{attrs:{id:"_20-post-integration-test"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20-post-integration-test"}},[a._v("#")]),a._v(" 20. "),t("code",[a._v("post-integration-test")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：集成测试后进行清理。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("：通常用于停止服务或清理环境。")])]),a._v(" "),t("h5",{attrs:{id:"_21-verify"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_21-verify"}},[a._v("#")]),a._v(" 21. "),t("code",[a._v("verify")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：运行任何检查，验证打包结果。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("：可能使用 "),t("code",[a._v("verifier:verify")]),a._v("。")])]),a._v(" "),t("h5",{attrs:{id:"_22-install"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_22-install"}},[a._v("#")]),a._v(" 22. "),t("code",[a._v("install")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：将包安装到本地 Maven 仓库。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("："),t("code",[a._v("install:install")]),a._v("。")])]),a._v(" "),t("h5",{attrs:{id:"_23-deploy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_23-deploy"}},[a._v("#")]),a._v(" 23. "),t("code",[a._v("deploy")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：将包部署到远程仓库，以供共享。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("："),t("code",[a._v("deploy:deploy")]),a._v("。")])]),a._v(" "),t("p",[a._v("这些阶段和相应的 goals 组成了 Maven 的构建生命周期，可以根据需要在 "),t("code",[a._v("pom.xml")]),a._v(" 中配置和扩展，以满足项目的特定需求。每个阶段的执行可以由插件定义和扩展，从而实现自定义的构建过程。")]),a._v(" "),t("p",[a._v("如果我们运行 "),t("code",[a._v("mvn package")]),a._v("，Maven 就会执行 "),t("code",[a._v("default")]),a._v(" 生命周期，它会从开始一直运行到 "),t("code",[a._v("package")]),a._v(" 这个 phase 为止。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("validate\ninitialize\n...\nprepare-package\npackage\n")])])]),t("p",[a._v("如果我们运行 "),t("code",[a._v("mvn compile")]),a._v("，Maven 也会执行 "),t("code",[a._v("default")]),a._v(" 生命周期，但这次他只会运行到 "),t("code",[a._v("compile")]),a._v(" 这个 phase 为止。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("validate\ninitialize\n...\nprocess-resources\ncompile\n")])])]),t("h4",{attrs:{id:"maven-另一个常用的生命周期是-clean-它会执行-3-个-phase"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maven-另一个常用的生命周期是-clean-它会执行-3-个-phase"}},[a._v("#")]),a._v(" Maven 另一个常用的生命周期是 "),t("code",[a._v("clean")]),a._v("，它会执行 3 个 phase")]),a._v(" "),t("p",[a._v("Maven 的 "),t("code",[a._v("clean")]),a._v(" 生命周期主要用于清理项目的构建输出，即删除生成的文件和目录。这一生命周期包括三个阶段（phase），它们依次执行，确保清理操作的完整性和有效性。以下是 "),t("code",[a._v("clean")]),a._v(" 生命周期中的三个阶段的详细介绍：")]),a._v(" "),t("h5",{attrs:{id:"_1-pre-clean"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-pre-clean"}},[a._v("#")]),a._v(" 1. "),t("code",[a._v("pre-clean")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：在清理之前执行的步骤。主要用于执行一些准备工作或设置清理前的条件。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("：通常没有特定的默认 goal，用户可以根据需要自定义一些准备步骤。")])]),a._v(" "),t("h5",{attrs:{id:"_2-clean"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-clean"}},[a._v("#")]),a._v(" 2. "),t("code",[a._v("clean")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：执行实际的清理操作。这是 "),t("code",[a._v("clean")]),a._v(" 生命周期的核心阶段，负责删除项目构建过程中生成的文件和目录，通常是 "),t("code",[a._v("target")]),a._v(" 目录。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("："),t("code",[a._v("maven-clean-plugin:clean")]),a._v("，它删除默认构建目录中的所有文件和子目录，确保项目构建环境的干净整洁。")])]),a._v(" "),t("h5",{attrs:{id:"_3-post-clean"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-post-clean"}},[a._v("#")]),a._v(" 3. "),t("code",[a._v("post-clean")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("作用")]),a._v("：在清理之后执行的步骤。用于进行后续的处理或记录日志。")]),a._v(" "),t("li",[t("strong",[a._v("常用 goal")]),a._v("：通常没有特定的默认 goal，用户可以根据需要添加一些后处理步骤。")])]),a._v(" "),t("h5",{attrs:{id:"使用示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用示例"}},[a._v("#")]),a._v(" 使用示例")]),a._v(" "),t("p",[a._v("在命令行中运行 "),t("code",[a._v("clean")]),a._v(" 生命周期的命令：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("mvn clean\n")])])]),t("p",[a._v("这条命令会依次执行上述三个阶段，确保项目的构建目录被清理干净，以便进行新的构建。")]),a._v(" "),t("h5",{attrs:{id:"扩展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[a._v("#")]),a._v(" 扩展")]),a._v(" "),t("ul",[t("li",[t("p",[t("strong",[a._v("自定义清理操作")]),a._v("：虽然 "),t("code",[a._v("maven-clean-plugin")]),a._v(" 已经提供了基础的清理功能，但用户可以通过插件配置在 "),t("code",[a._v("pom.xml")]),a._v(" 中添加自定义的清理操作。例如，删除特定的日志文件或临时文件。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("与其他生命周期结合使用")]),a._v("："),t("code",[a._v("clean")]),a._v(" 生命周期常与 "),t("code",[a._v("default")]),a._v(" 生命周期结合使用，例如 "),t("code",[a._v("mvn clean install")]),a._v("，以确保在每次构建之前都进行清理操作。")])])]),a._v(" "),t("h2",{attrs:{id:"maven-的基本命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maven-的基本命令"}},[a._v("#")]),a._v(" Maven 的基本命令")]),a._v(" "),t("p",[a._v("Maven 是一个强大的项目管理和构建工具，提供了多种命令来管理项目的生命周期、依赖和构建过程。以下是一些常用的 Maven 命令及其用途：")]),a._v(" "),t("h3",{attrs:{id:"常用-maven-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用-maven-命令"}},[a._v("#")]),a._v(" 常用 Maven 命令")]),a._v(" "),t("ol",[t("li",[t("p",[t("strong",[t("code",[a._v("mvn clean")])])]),a._v(" "),t("ul",[t("li",[a._v("清理项目，删除 "),t("code",[a._v("target")]),a._v(" 目录及其所有内容，通常用于清除旧的构建结果。")])])]),a._v(" "),t("li",[t("p",[t("strong",[t("code",[a._v("mvn compile")])])]),a._v(" "),t("ul",[t("li",[a._v("编译项目的源代码，将 "),t("code",[a._v(".java")]),a._v(" 文件编译为 "),t("code",[a._v(".class")]),a._v(" 文件。")])])]),a._v(" "),t("li",[t("p",[t("strong",[t("code",[a._v("mvn test")])])]),a._v(" "),t("ul",[t("li",[a._v("运行项目中的测试用例。Maven 会使用测试框架（如 JUnit 或 TestNG）执行测试。")])])]),a._v(" "),t("li",[t("p",[t("strong",[t("code",[a._v("mvn package")])])]),a._v(" "),t("ul",[t("li",[a._v("编译项目并打包为 JAR 或 WAR 文件，存放在 "),t("code",[a._v("target")]),a._v(" 目录下。")])])]),a._v(" "),t("li",[t("p",[t("strong",[t("code",[a._v("mvn install")])])]),a._v(" "),t("ul",[t("li",[a._v("将项目的构建输出（JAR、WAR 等）安装到本地仓库中，以便其他项目使用。")])])]),a._v(" "),t("li",[t("p",[t("strong",[t("code",[a._v("mvn deploy")])])]),a._v(" "),t("ul",[t("li",[a._v("将项目打包并发布到远程仓库，通常用于项目发布阶段。")])])]),a._v(" "),t("li",[t("p",[t("strong",[t("code",[a._v("mvn validate")])])]),a._v(" "),t("ul",[t("li",[a._v("验证项目是否正确并且所有必要信息可用。")])])]),a._v(" "),t("li",[t("p",[t("strong",[t("code",[a._v("mvn site")])])]),a._v(" "),t("ul",[t("li",[a._v("生成项目站点文档，包括项目报告、代码覆盖率、依赖关系等。")])])]),a._v(" "),t("li",[t("p",[t("strong",[t("code",[a._v("mvn dependency:resolve")])])]),a._v(" "),t("ul",[t("li",[a._v("解析项目的所有依赖并下载到本地仓库。")])])]),a._v(" "),t("li",[t("p",[t("strong",[t("code",[a._v("mvn dependency:tree")])])]),a._v(" "),t("ul",[t("li",[a._v("显示项目依赖树，帮助分析依赖关系和冲突。")])])]),a._v(" "),t("li",[t("p",[t("strong",[t("code",[a._v("mvn clean install")])])]),a._v(" "),t("ul",[t("li",[a._v("先清理项目再编译、测试、打包并安装到本地仓库。这是一个常用的组合命令。")])])])]),a._v(" "),t("h3",{attrs:{id:"使用说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用说明"}},[a._v("#")]),a._v(" 使用说明")]),a._v(" "),t("ul",[t("li",[t("p",[t("strong",[a._v("命令行执行")]),a._v("：在项目的根目录下使用命令行执行这些命令，例如：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("mvn clean package\n")])])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("组合使用")]),a._v("：Maven 命令可以组合使用，以完成多个构建步骤。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("插件支持")]),a._v("：许多命令是通过 Maven 插件实现的，用户可以自定义或扩展这些功能。")])])]),a._v(" "),t("h3",{attrs:{id:"mvn-命令的本质"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mvn-命令的本质"}},[a._v("#")]),a._v(" "),t("code",[a._v("mvn")]),a._v(" 命令的本质")]),a._v(" "),t("p",[a._v("我们使用 mvn 这个命令时，后面的参数是 phase，Maven 自动根据生命周期运行到指定的 phase。")]),a._v(" "),t("p",[a._v("例如，运行 mvn clean package，Maven 先执行 clean 生命周期并运行到 clean 这个 phase，然后执行 default 生命周期并运行到 package 这个 phase，实际执行的 phase 如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("pre-clean\nclean （注意这个clean是phase）\nvalidate （开始执行default生命周期的第一个phase）\ninitialize\n...\nprepare-package\npackage\n")])])]),t("p",[a._v("在实际开发过程中，经常使用的命令有：")]),a._v(" "),t("ul",[t("li",[a._v("mvn clean：清理所有生成的 class 和 jar；")]),a._v(" "),t("li",[a._v("mvn clean compile：先清理，再执行到 compile；")]),a._v(" "),t("li",[a._v("mvn clean test：先清理，再执行到 test，因为执行 test 前必须执行 compile，所以这里不必指定 compile；")]),a._v(" "),t("li",[a._v("mvn clean package：先清理，再执行到 package。")])]),a._v(" "),t("p",[a._v("大多数 phase 在执行过程中，因为我们通常没有在 pom.xml 中配置相关的设置，所以这些 phase 什么事情都不做。")]),a._v(" "),t("p",[a._v("经常用到的 phase 其实只有几个：")]),a._v(" "),t("ul",[t("li",[a._v("clean：清理")]),a._v(" "),t("li",[a._v("compile：编译")]),a._v(" "),t("li",[a._v("test：运行测试")]),a._v(" "),t("li",[a._v("package：打包")])]),a._v(" "),t("h3",{attrs:{id:"使用插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用插件"}},[a._v("#")]),a._v(" 使用插件")]),a._v(" "),t("p",[a._v("前面介绍了 Maven 的 lifecycle，phase 和 goal：使用 Maven 构建项目就是执行 lifecycle，执行到指定的 phase 为止。每个 phase 会执行自己默认的一个或多个 goal。goal 是最小任务单元。")]),a._v(" "),t("p",[a._v("以"),t("code",[a._v("compile")]),a._v("这个 phase 为例，如果执行：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("mvn compile\n")])])]),t("p",[a._v("Maven 将执行 compile 这个 phase，这个 phase 会调用 compiler 插件执行关联的 compiler:compile 这个 goal。")]),a._v(" "),t("p",[a._v("实际上，执行每个 phase，都是通过某个插件（plugin）来执行的，Maven 本身其实并不知道如何执行 compile，它只是负责找到对应的 compiler 插件，然后执行默认的 compiler:compile 这个 goal 来完成编译。")]),a._v(" "),t("p",[a._v("所以，使用 Maven，实际上就是配置好需要使用的插件，然后通过 phase 调用它们。")]),a._v(" "),t("p",[a._v("Maven 已经内置了一些常用的标准插件，例如 maven-jar-plugin：")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"left"}},[a._v("插件名称")]),a._v(" "),t("th",{staticStyle:{"text-align":"left"}},[a._v("对应执行的 phase")])])]),a._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"left"}},[a._v("clean")]),a._v(" "),t("td",{staticStyle:{"text-align":"left"}},[a._v("clean")])]),a._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[a._v("compiler")]),a._v(" "),t("td",{staticStyle:{"text-align":"left"}},[a._v("compile")])]),a._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[a._v("surefire")]),a._v(" "),t("td",{staticStyle:{"text-align":"left"}},[a._v("test")])]),a._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[a._v("jar")]),a._v(" "),t("td",{staticStyle:{"text-align":"left"}},[a._v("package")])])])]),a._v(" "),t("p",[a._v("如果标准插件无法满足需求，我们还可以使用自定义插件。使用自定义插件的时候，需要声明。例如，使用 maven-shade-plugin 可以创建一个可执行的 jar，要使用这个插件，需要在 pom.xml 中声明它：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("<project>\n    ...\n\t<build>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-shade-plugin</artifactId>\n                <version>3.2.1</version>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<phase>package</phase>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>shade</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t<configuration>\n                            ...插件配置...\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n</project>\n")])])]),t("p",[a._v("自定义插件往往需要一些配置，例如，maven-shade-plugin 需要指定 Java 程序的入口，它的配置是：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<configuration>\n    <transformers>\n        <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">\n            <mainClass>com.itranswarp.learnjava.Main</mainClass>\n        </transformer>\n    </transformers>\n</configuration>\n')])])]),t("p",[a._v("注意，Maven 自带的标准插件例如 compiler 是无需声明的，只有引入其它的插件才需要声明。")]),a._v(" "),t("p",[a._v("下面列举了一些常用的插件：")]),a._v(" "),t("ul",[t("li",[a._v("maven-shade-plugin：打包所有依赖包并生成可执行 jar，"),t("a",{attrs:{href:"https://www.cnblogs.com/wanghengbin/p/17927038.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("插件的实践介绍"),t("OutboundLink")],1),a._v("；")]),a._v(" "),t("li",[a._v("cobertura-maven-plugin：生成单元测试覆盖率报告；")]),a._v(" "),t("li",[a._v("findbugs-maven-plugin：对 Java 源码进行静态分析以找出潜在问题。")])]),a._v(" "),t("h4",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),t("p",[a._v("Maven 通过自定义插件可以执行项目构建时需要的额外功能，使用自定义插件必须在 pom.xml 中声明插件及配置；")]),a._v(" "),t("p",[a._v("插件会在某个 phase 被执行时执行；")]),a._v(" "),t("p",[a._v("插件的配置和用法需参考插件的官方文档。")]),a._v(" "),t("h2",{attrs:{id:"常见的关键问题-🌟"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见的关键问题-🌟"}},[a._v("#")]),a._v(" 常见的关键问题 🌟")]),a._v(" "),t("h3",{attrs:{id:"maven-如何知道从何处下载所需的依赖-也就是相关的-jar-包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maven-如何知道从何处下载所需的依赖-也就是相关的-jar-包"}},[a._v("#")]),a._v(" Maven 如何知道从何处下载所需的依赖？也就是相关的 jar 包？")]),a._v(" "),t("p",[a._v("Maven 维护了一个中央仓库（repo1.maven.org），所有第三方库将自身的 jar 以及相关信息上传至中央仓库，Maven 就可以从中央仓库把所需依赖下载到本地。")]),a._v(" "),t("p",[a._v("Maven 并不会每次都从中央仓库下载 jar 包。一个 jar 包一旦被下载过，就会被 Maven 自动缓存在本地目录（用户主目录的.m2 目录），所以，除了第一次编译时因为下载需要时间会比较慢，后续过程因为有本地缓存，并不会重复下载相同的 jar 包。")]),a._v(" "),t("h4",{attrs:{id:"maven-镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maven-镜像"}},[a._v("#")]),a._v(" Maven 镜像")]),a._v(" "),t("p",[a._v("除了可以从 Maven 的中央仓库下载外，还可以从 Maven 的镜像仓库下载。如果访问 Maven 的中央仓库非常慢，我们可以选择一个速度较快的 Maven 的镜像仓库。Maven 镜像仓库定期从中央仓库同步。")]),a._v(" "),t("p",[a._v("中国区用户可以使用阿里云提供的 Maven 镜像仓库。使用 Maven 镜像仓库需要一个配置，在用户主目录下进入.m2 目录，创建一个 settings.xml 配置文件，内容如下：")]),a._v(" "),t("div",{staticClass:"language-xml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("settings")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("mirrors")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("mirror")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("aliyun"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("aliyun"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("mirrorOf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("central"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("mirrorOf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("\x3c!-- 国内推荐阿里云的Maven镜像 --\x3e")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("url")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("https://maven.aliyun.com/repository/central"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("url")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("mirror")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("mirrors")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("settings")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),t("h3",{attrs:{id:"下载依赖的几种方式以及如何使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下载依赖的几种方式以及如何使用"}},[a._v("#")]),a._v(" 下载依赖的几种方式以及如何使用？")]),a._v(" "),t("ul",[t("li",[a._v("中央仓库")]),a._v(" "),t("li",[a._v("远程仓库")]),a._v(" "),t("li",[a._v("本地仓库")]),a._v(" "),t("li",[a._v("本地文件")])]),a._v(" "),t("h4",{attrs:{id:"_1-中央仓库-central-repository"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-中央仓库-central-repository"}},[a._v("#")]),a._v(" 1. 中央仓库（Central Repository）")]),a._v(" "),t("p",[a._v("Maven 的中央仓库是一个公开的仓库，存放了大量的开源库。默认情况下，Maven 会从中央仓库下载项目依赖。")]),a._v(" "),t("p",[t("strong",[a._v("使用方式")]),a._v("：")]),a._v(" "),t("ul",[t("li",[a._v("在 "),t("code",[a._v("pom.xml")]),a._v(" 中声明依赖时，无需额外配置，Maven 会自动从中央仓库下载。")])]),a._v(" "),t("div",{staticClass:"language-xml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("org.apache.commons"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("commons-lang3"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("3.12.0"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),t("h4",{attrs:{id:"_2-远程仓库-remote-repository"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-远程仓库-remote-repository"}},[a._v("#")]),a._v(" 2. 远程仓库（Remote Repository）")]),a._v(" "),t("p",[a._v("远程仓库可以是你自己的私有仓库或其他第三方仓库。如果依赖不在中央仓库中，可以配置远程仓库。")]),a._v(" "),t("p",[t("strong",[a._v("配置方式")]),a._v("：")]),a._v(" "),t("ul",[t("li",[a._v("在 "),t("code",[a._v("pom.xml")]),a._v(" 或 "),t("code",[a._v("settings.xml")]),a._v(" 中添加仓库配置。")])]),a._v(" "),t("div",{staticClass:"language-xml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("repositories")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("repository")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("my-private-repo"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("url")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("http://repo.mycompany.com/maven2"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("url")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("repository")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("repositories")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),t("h4",{attrs:{id:"_3-本地仓库-local-repository"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-本地仓库-local-repository"}},[a._v("#")]),a._v(" 3. 本地仓库（Local Repository）")]),a._v(" "),t("p",[a._v("本地仓库是存储在你设备上的一个目录，Maven 会首先在本地仓库中查找依赖。如果找不到，再从远程仓库下载。")]),a._v(" "),t("p",[t("strong",[a._v("位置")]),a._v("：")]),a._v(" "),t("ul",[t("li",[a._v("默认路径为 "),t("code",[a._v("~/.m2/repository")]),a._v("。可以在 "),t("code",[a._v("settings.xml")]),a._v(" 中通过 "),t("code",[a._v("<localRepository>")]),a._v(" 标签自定义本地仓库路径。")])]),a._v(" "),t("p",[t("strong",[a._v("使用方式")]),a._v("：")]),a._v(" "),t("ul",[t("li",[a._v("正常使用，无需特殊配置，Maven 会自动管理。")])]),a._v(" "),t("h4",{attrs:{id:"_4-本地包-local-jar"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-本地包-local-jar"}},[a._v("#")]),a._v(" 4. 本地包（Local JAR）")]),a._v(" "),t("p",[a._v("有时，某些依赖可能没有在任何仓库中发布，需要手动安装到本地仓库。")]),a._v(" "),t("p",[t("strong",[a._v("使用方式")]),a._v("：")]),a._v(" "),t("ul",[t("li",[a._v("使用 "),t("code",[a._v("mvn install:install-file")]),a._v(" 命令手动安装。")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("mvn install:install-file "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Dfile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/path/to/your.jar "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-DgroupId")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("com.example "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-DartifactId")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("your-artifact "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Dversion")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.0")]),a._v(".0 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Dpackaging")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("jar\n")])])]),t("h4",{attrs:{id:"选择合适的方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选择合适的方式"}},[a._v("#")]),a._v(" 选择合适的方式")]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("中央仓库")]),a._v("：优先使用，简单直接。")]),a._v(" "),t("li",[t("strong",[a._v("远程仓库")]),a._v("：当依赖不在中央仓库中，或需要使用私有库时使用。")]),a._v(" "),t("li",[t("strong",[a._v("本地仓库")]),a._v("：自动管理，用户无需干预。")]),a._v(" "),t("li",[t("strong",[a._v("本地包")]),a._v("：适用于没有发布在仓库中的内部库或临时使用的库。")])]),a._v(" "),t("h3",{attrs:{id:"如何搜索第三方组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何搜索第三方组件"}},[a._v("#")]),a._v(" 如何搜索第三方组件？")]),a._v(" "),t("p",[a._v("如果我们要引用一个第三方组件，比如 okhttp，如何确切地获得它的 groupId、artifactId 和 version？方法是通过 "),t("a",{attrs:{href:"https://search.maven.org/",target:"_blank",rel:"noopener noreferrer"}},[a._v("search.maven.org"),t("OutboundLink")],1),a._v(" 搜索关键字，找到对应的组件后，直接复制信息。")]),a._v(" "),t("h3",{attrs:{id:"什么是-jar-包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是-jar-包"}},[a._v("#")]),a._v(" 什么是 jar 包？")]),a._v(" "),t("p",[a._v("在 Java 中，"),t("code",[a._v("JAR")]),a._v(" 包（Java ARchive）是一种用于分发、部署和使用 Java 应用程序或库的压缩文件格式。它类似于 ZIP 文件，但专门用于 Java 环境。JAR 包通常包含 Java 类文件、资源（如图像、配置文件）和一个特殊的清单文件（"),t("code",[a._v("MANIFEST.MF")]),a._v("），用于指定包的元数据和配置信息。")]),a._v(" "),t("h4",{attrs:{id:"jar-包的特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jar-包的特点"}},[a._v("#")]),a._v(" JAR 包的特点")]),a._v(" "),t("ol",[t("li",[t("p",[t("strong",[a._v("压缩格式")]),a._v("：JAR 包使用 ZIP 压缩格式，减少了文件大小，便于分发和传输。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("跨平台")]),a._v("：因为 Java 本身是跨平台的，JAR 包可以在任何支持 Java 的平台上运行。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("包含多种资源")]),a._v("：除了类文件外，JAR 包还可以包含图片、音频、文本等资源文件。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("可执行 JAR")]),a._v("：通过配置清单文件，JAR 可以被设定为可执行文件，允许直接通过 Java 命令运行整个应用程序。")])])]),a._v(" "),t("h4",{attrs:{id:"使用-jar-包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-jar-包"}},[a._v("#")]),a._v(" 使用 JAR 包")]),a._v(" "),t("ul",[t("li",[t("p",[t("strong",[a._v("创建 JAR 包")]),a._v("：使用 Java 提供的 "),t("code",[a._v("jar")]),a._v(" 工具可以创建 JAR 包。例如：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("jar cf myapp.jar "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" bin/ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),t("p",[a._v("上述命令将把 "),t("code",[a._v("bin")]),a._v(" 目录下的所有文件打包成 "),t("code",[a._v("myapp.jar")]),a._v("。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("运行 JAR 包")]),a._v("：如果 JAR 包是可执行的，可以直接运行：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jar")]),a._v(" myapp.jar\n")])])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("查看 JAR 包内容")]),a._v("：可以使用 "),t("code",[a._v("jar")]),a._v(" 工具查看 JAR 包的内容：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("jar tf myapp.jar\n")])])])])]),a._v(" "),t("p",[t("code",[a._v("jar")]),a._v(" 命令是 Java 开发工具包（JDK）中的一个实用工具，用于创建、管理和解压 JAR 文件（Java ARchive）。JAR 文件是用于打包多个文件（如类文件和资源）以便分发的压缩文件格式。以下是 "),t("code",[a._v("jar")]),a._v(" 命令的详细介绍：")]),a._v(" "),t("h4",{attrs:{id:"jar-命令基本语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jar-命令基本语法"}},[a._v("#")]),a._v(" jar 命令基本语法")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("jar "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("options"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("jar-file"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("manifest-file"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("entry-point"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-C dir"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" files\n")])])]),t("h5",{attrs:{id:"常用选项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用选项"}},[a._v("#")]),a._v(" 常用选项")]),a._v(" "),t("ul",[t("li",[t("strong",[t("code",[a._v("c")])]),a._v("：创建一个新的 JAR 文件。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("x")])]),a._v("：从现有 JAR 文件中解压文件。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("t")])]),a._v("：列出 JAR 文件的内容。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("u")])]),a._v("：更新现有的 JAR 文件。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("f")])]),a._v("：指定 JAR 文件名（该选项通常与 "),t("code",[a._v("c")]),a._v("、"),t("code",[a._v("x")]),a._v("、"),t("code",[a._v("t")]),a._v("、"),t("code",[a._v("u")]),a._v(" 结合使用）。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("v")])]),a._v("：生成详细输出，显示详细信息。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("m")])]),a._v("：包含清单文件。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("e")])]),a._v("：指定 JAR 文件的入口点（用于执行 JAR 文件时）。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("C")])]),a._v("：切换目录并添加文件。")])]),a._v(" "),t("h5",{attrs:{id:"常用命令示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用命令示例"}},[a._v("#")]),a._v(" 常用命令示例")]),a._v(" "),t("ol",[t("li",[t("p",[t("strong",[a._v("创建 JAR 文件")])]),a._v(" "),t("p",[a._v("将当前目录 ("),t("code",[a._v(".")]),a._v(") 下的所有文件打包成 "),t("code",[a._v("myapp.jar")]),a._v("：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("jar cf myapp.jar "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("创建带清单文件的 JAR 文件")])]),a._v(" "),t("p",[a._v("使用自定义清单文件 "),t("code",[a._v("manifest.mf")]),a._v(" 打包：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("jar cmf manifest.mf myapp.jar "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("查看 JAR 文件内容")])]),a._v(" "),t("p",[a._v("列出 "),t("code",[a._v("myapp.jar")]),a._v(" 的内容：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("jar tf myapp.jar\n")])])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("解压 JAR 文件")])]),a._v(" "),t("p",[a._v("将 "),t("code",[a._v("myapp.jar")]),a._v(" 解压到当前目录：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("jar xf myapp.jar\n")])])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("更新 JAR 文件")])]),a._v(" "),t("p",[a._v("更新 "),t("code",[a._v("myapp.jar")]),a._v(" 中的文件：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("jar uf myapp.jar updatedFile.class\n")])])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("指定入口点创建可执行 JAR")])]),a._v(" "),t("p",[a._v("创建一个可执行的 JAR 文件，入口点为 "),t("code",[a._v("com.example.Main")]),a._v("：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("jar cfe myapp.jar com.example.Main "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" classes "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])])])]),a._v(" "),t("h5",{attrs:{id:"注意事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[a._v("#")]),a._v(" 注意事项")]),a._v(" "),t("ul",[t("li",[t("p",[t("strong",[a._v("清单文件")]),a._v("：清单文件 ("),t("code",[a._v("MANIFEST.MF")]),a._v(") 包含关于 JAR 文件的信息，如版本号、入口点等。可以通过 "),t("code",[a._v("m")]),a._v(" 选项指定自定义清单文件。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("路径问题")]),a._v("：使用 "),t("code",[a._v("-C")]),a._v(" 选项可以在打包时切换目录，这有助于保持包结构。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("入口点")]),a._v("：使用 "),t("code",[a._v("e")]),a._v(" 选项可以指定可执行 JAR 的入口点类，这样可以直接运行 JAR 文件。")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);